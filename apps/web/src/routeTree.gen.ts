/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VehiclesWithStatsImport } from './routes/vehiclesWithStats'
import { Route as VehiclesWithRacesImport } from './routes/vehiclesWithRaces'
import { Route as VehiclesBySpeedImport } from './routes/vehiclesBySpeed'
import { Route as VehicleWithStatsImport } from './routes/vehicleWithStats'
import { Route as VehicleWithRacesImport } from './routes/vehicleWithRaces'
import { Route as VehicleImport } from './routes/vehicle'
import { Route as RaceImport } from './routes/race'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const VehiclesWithStatsRoute = VehiclesWithStatsImport.update({
  path: '/vehiclesWithStats',
  getParentRoute: () => rootRoute,
} as any)

const VehiclesWithRacesRoute = VehiclesWithRacesImport.update({
  path: '/vehiclesWithRaces',
  getParentRoute: () => rootRoute,
} as any)

const VehiclesBySpeedRoute = VehiclesBySpeedImport.update({
  path: '/vehiclesBySpeed',
  getParentRoute: () => rootRoute,
} as any)

const VehicleWithStatsRoute = VehicleWithStatsImport.update({
  path: '/vehicleWithStats',
  getParentRoute: () => rootRoute,
} as any)

const VehicleWithRacesRoute = VehicleWithRacesImport.update({
  path: '/vehicleWithRaces',
  getParentRoute: () => rootRoute,
} as any)

const VehicleRoute = VehicleImport.update({
  path: '/vehicle',
  getParentRoute: () => rootRoute,
} as any)

const RaceRoute = RaceImport.update({
  path: '/race',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/race': {
      id: '/race'
      path: '/race'
      fullPath: '/race'
      preLoaderRoute: typeof RaceImport
      parentRoute: typeof rootRoute
    }
    '/vehicle': {
      id: '/vehicle'
      path: '/vehicle'
      fullPath: '/vehicle'
      preLoaderRoute: typeof VehicleImport
      parentRoute: typeof rootRoute
    }
    '/vehicleWithRaces': {
      id: '/vehicleWithRaces'
      path: '/vehicleWithRaces'
      fullPath: '/vehicleWithRaces'
      preLoaderRoute: typeof VehicleWithRacesImport
      parentRoute: typeof rootRoute
    }
    '/vehicleWithStats': {
      id: '/vehicleWithStats'
      path: '/vehicleWithStats'
      fullPath: '/vehicleWithStats'
      preLoaderRoute: typeof VehicleWithStatsImport
      parentRoute: typeof rootRoute
    }
    '/vehiclesBySpeed': {
      id: '/vehiclesBySpeed'
      path: '/vehiclesBySpeed'
      fullPath: '/vehiclesBySpeed'
      preLoaderRoute: typeof VehiclesBySpeedImport
      parentRoute: typeof rootRoute
    }
    '/vehiclesWithRaces': {
      id: '/vehiclesWithRaces'
      path: '/vehiclesWithRaces'
      fullPath: '/vehiclesWithRaces'
      preLoaderRoute: typeof VehiclesWithRacesImport
      parentRoute: typeof rootRoute
    }
    '/vehiclesWithStats': {
      id: '/vehiclesWithStats'
      path: '/vehiclesWithStats'
      fullPath: '/vehiclesWithStats'
      preLoaderRoute: typeof VehiclesWithStatsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/race': typeof RaceRoute
  '/vehicle': typeof VehicleRoute
  '/vehicleWithRaces': typeof VehicleWithRacesRoute
  '/vehicleWithStats': typeof VehicleWithStatsRoute
  '/vehiclesBySpeed': typeof VehiclesBySpeedRoute
  '/vehiclesWithRaces': typeof VehiclesWithRacesRoute
  '/vehiclesWithStats': typeof VehiclesWithStatsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/race': typeof RaceRoute
  '/vehicle': typeof VehicleRoute
  '/vehicleWithRaces': typeof VehicleWithRacesRoute
  '/vehicleWithStats': typeof VehicleWithStatsRoute
  '/vehiclesBySpeed': typeof VehiclesBySpeedRoute
  '/vehiclesWithRaces': typeof VehiclesWithRacesRoute
  '/vehiclesWithStats': typeof VehiclesWithStatsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/race': typeof RaceRoute
  '/vehicle': typeof VehicleRoute
  '/vehicleWithRaces': typeof VehicleWithRacesRoute
  '/vehicleWithStats': typeof VehicleWithStatsRoute
  '/vehiclesBySpeed': typeof VehiclesBySpeedRoute
  '/vehiclesWithRaces': typeof VehiclesWithRacesRoute
  '/vehiclesWithStats': typeof VehiclesWithStatsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/race'
    | '/vehicle'
    | '/vehicleWithRaces'
    | '/vehicleWithStats'
    | '/vehiclesBySpeed'
    | '/vehiclesWithRaces'
    | '/vehiclesWithStats'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/race'
    | '/vehicle'
    | '/vehicleWithRaces'
    | '/vehicleWithStats'
    | '/vehiclesBySpeed'
    | '/vehiclesWithRaces'
    | '/vehiclesWithStats'
  id:
    | '__root__'
    | '/'
    | '/race'
    | '/vehicle'
    | '/vehicleWithRaces'
    | '/vehicleWithStats'
    | '/vehiclesBySpeed'
    | '/vehiclesWithRaces'
    | '/vehiclesWithStats'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RaceRoute: typeof RaceRoute
  VehicleRoute: typeof VehicleRoute
  VehicleWithRacesRoute: typeof VehicleWithRacesRoute
  VehicleWithStatsRoute: typeof VehicleWithStatsRoute
  VehiclesBySpeedRoute: typeof VehiclesBySpeedRoute
  VehiclesWithRacesRoute: typeof VehiclesWithRacesRoute
  VehiclesWithStatsRoute: typeof VehiclesWithStatsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RaceRoute: RaceRoute,
  VehicleRoute: VehicleRoute,
  VehicleWithRacesRoute: VehicleWithRacesRoute,
  VehicleWithStatsRoute: VehicleWithStatsRoute,
  VehiclesBySpeedRoute: VehiclesBySpeedRoute,
  VehiclesWithRacesRoute: VehiclesWithRacesRoute,
  VehiclesWithStatsRoute: VehiclesWithStatsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/race",
        "/vehicle",
        "/vehicleWithRaces",
        "/vehicleWithStats",
        "/vehiclesBySpeed",
        "/vehiclesWithRaces",
        "/vehiclesWithStats"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/race": {
      "filePath": "race.tsx"
    },
    "/vehicle": {
      "filePath": "vehicle.tsx"
    },
    "/vehicleWithRaces": {
      "filePath": "vehicleWithRaces.tsx"
    },
    "/vehicleWithStats": {
      "filePath": "vehicleWithStats.tsx"
    },
    "/vehiclesBySpeed": {
      "filePath": "vehiclesBySpeed.tsx"
    },
    "/vehiclesWithRaces": {
      "filePath": "vehiclesWithRaces.tsx"
    },
    "/vehiclesWithStats": {
      "filePath": "vehiclesWithStats.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
