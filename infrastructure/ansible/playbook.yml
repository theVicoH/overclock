- name : Configure Severs
  hosts: proxy
  become: true
  roles:
    - geerlingguy.docker
  vars:
        docker_install_compose: true
  tasks:
    - name: Create a network
      command: docker network create nginx-proxy-network

    - name: Create docker-compose.yml file
      copy:
        dest: ./docker-compose.yml
        content: |
          version: '3.8'
          services:
            nginx-proxy-manager:
              image: jc21/nginx-proxy-manager:latest
              container_name: nginx-proxy-manager
              restart: always
              ports:
                - "80:80"
                - "81:81"
                - "443:443"
              volumes:
                - ./data:/data
                - ./letsencrypt:/etc/letsencrypt
              networks:
                - nginx-proxy-network

            overclockapi:
              image: ghcr.io/clementpnn/overclockapi:main
              container_name: overclockapi
              ports:
                - "3000:3000"
              environment:
                - BROKER: tcp://195.15.198.5:1883
                - CLIENT_ID: mqtt_client
                - USERNAME: guest
                - PASSWORD: guest
              networks:
                - nginx-proxy-network

            rabbitmq:
              image: rabbitmq:3-management
              container_name: rabbitmq
              ports:
                - "1883:1883"
                - "8883:8883"
                - "15672:15672"
              environment:
                RABBITMQ_DEFAULT_USER: guest
                RABBITMQ_DEFAULT_PASS: guest
                RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management.listeners.tcp.default = 15672 -rabbitmq_mqtt.listeners.tcp.default = 1883 -rabbitmq_mqtt.listeners.ssl.default = 8883"
              volumes:
                - rabbitmq_data:/var/lib/rabbitmq
                - rabbitmq_logs:/var/log/rabbitmq
              networks:
                - nginx-proxy-network
              command: >
                /bin/bash -c "
                  rabbitmq-plugins enable --offline rabbitmq_mqtt &&
                  rabbitmq-server
                "

          networks:
            nginx-proxy-network:
              external: true

          volumes:
            rabbitmq_data:
            rabbitmq_logs: